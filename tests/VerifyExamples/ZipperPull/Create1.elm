module VerifyExamples.ZipperPull.Create1 exposing (..)

-- This file got generated by [elm-verify-examples](https://github.com/stoeffel/elm-verify-examples).
-- Please don't modify this file by hand!

import Test
import Expect

import ZipperPull exposing (..)

type alias Model =
    { title : String
    , readCount : Int
    , previousVolumes : List (String, Int)
    , latterVolumes : List (String, Int)
    }

pull : ZipperPull (String, Int) Model output
pull =
    create
        { getForeList = .latterVolumes
        , getRearList = .previousVolumes
        , getCurrent = \m -> (m.title, m.readCount)
        , setForeList = \l m -> {m| latterVolumes = l}
        , setRearList = \f m -> {m| previousVolumes = f}
        , setCurrent = \(t,c) m -> {m| title=t, readCount=c}
        }
model : Model
model =
    { title = "Philosopher's Stone"
    , readCount = 3
    , previousVolumes = []
    , latterVolumes =
        [ ("Chamber of Secrets",2)
        , ("Prisoner of Azkaban",2)
        , ("Goblet of Fire",3)
        , ("Order of the Phoenix",2)
        , ("Half-Blood Prince",1)
        , ("Deathly Hallows",1)
        ]
    }



spec1 : Test.Test
spec1 =
    Test.test "#create: \n\n    model\n        |> pull.foldFromLast\n            (\\(_, count) sofar -> sofar + count)\n            0\n    --> 14" <|
        \() ->
            Expect.equal
                (
                model
                    |> pull.foldFromLast
                        (\(_, count) sofar -> sofar + count)
                        0
                )
                (
                14
                )